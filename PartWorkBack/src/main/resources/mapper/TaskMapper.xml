<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.campus.partworkback.mapper.TaskMapper">
    <insert id="addTask" parameterType="org.campus.partworkback.pojo.Task"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO task(
        publisher_id,
        <if test="title != null and title != ''">title,</if>
        <if test="description != null and description != ''">description,</if>
        <if test="budgetMin != null">budget_min,</if>
        <if test="budgetMax != null">budget_max,</if>
        <if test="deadline != null">deadline,</if>
        <if test="tags != null and tags != ''">tags,</if>
        status,
        created_at,
        updated_at
        )
        VALUES(
        #{publisherId},
        <if test="title != null and title != ''">#{title},</if>
        <if test="description != null and description != ''">#{description},</if>
        <if test="budgetMin != null">#{budgetMin},</if>
        <if test="budgetMax != null">#{budgetMax},</if>
        <if test="deadline != null">#{deadline},</if>
        <if test="tags != null and tags != ''">#{tags},</if>
        2,
        NOW(),
        NOW()
        )
    </insert>
    <resultMap id="TaskResultMap" type="org.campus.partworkback.pojo.Task">
        <id column="id" property="id"/>
        <result column="publisher_id" property="publisherId"/>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="budget_min" property="budgetMin"/>
        <result column="budget_max" property="budgetMax"/>
        <result column="deadline" property="deadline"/>
        <result column="tags" property="tags"/>
        <result column="status" property="status"/>
        <result column="chosen_applicant_id" property="chosenApplicantId"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>
    <select id="getTask" resultMap="TaskResultMap">
        SELECT
        id,
        publisher_id,
        title,
        description,
        budget_min,
        budget_max,
        deadline,
        tags,
        status,
        chosen_applicant_id,
        created_at,
        updated_at
        FROM task
        <where>
            <!-- 关键词搜索（description模糊查询） -->
            <if test="keyWord != null and keyWord != ''">
                AND description LIKE CONCAT('%', #{keyWord}, '%')
            </if>
            <!-- 状态筛选 -->
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY created_at DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="getAllTaskById" resultType="java.lang.Long">
        select id from task where task.publisher_id = #{userId}
    </select>

    <select id="getTaskById" resultType="org.campus.partworkback.pojo.Task">
        SELECT id, publisher_id, title, description, status,
               budget_min, budget_max,
               deadline, tags, chosen_applicant_id,
               created_at, updated_at
        FROM task
        WHERE id = #{id};
    </select>

    <update id="cancelTask">
        UPDATE task
        SET status = 6, updated_at = NOW()
        WHERE id = #{id}
          AND status IN (1,2)         -- 仅发布中 / 申请中允许取消
          AND chosen_applicant_id IS NULL;
    </update>

    <insert id="addApplication">
        INSERT INTO task_application(task_id, applicant_id, message, status, created_at)
        VALUES(#{id}, #{applicantId}, #{message}, 0, NOW());
    </insert>

    <resultMap id="TaskApplicationDTOMap" type="org.campus.partworkback.DTO.TaskApplicationDTO">
        <id property="id" column="id"/>
        <result property="taskId" column="task_id"/>
        <result property="message" column="message"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <association property="applicant" javaType="org.campus.partworkback.pojo.Applicant">
            <id property="id" column="applicant_id"/>
            <result property="nickname" column="nickname"/>
        </association>
    </resultMap>
    <select id="getTaskApplication" resultMap="TaskApplicationDTOMap">
        SELECT
            ta.id,
            ta.task_id,
            ta.applicant_id,
            ta.message,
            ta.status,
            ta.created_at,
            u.nickname
        FROM task_application ta
                 INNER JOIN user u ON ta.applicant_id = u.id
        WHERE ta.task_id = #{id}
        ORDER BY ta.created_at DESC
    </select>

    <update id="updateTaskById">
        <!--
        UPDATE task
        SET chosen_applicant_id = #{applicationId},
            status = 3,               - 进行中
            updated_at = NOW()
        WHERE id = #{id}
          AND status IN (1,2)
          AND chosen_applicant_id IS NULL;
          -->
                UPDATE task t
                JOIN task_application ta ON ta.id = #{applicationId} AND ta.task_id = t.id
                SET 
                        t.chosen_applicant_id = ta.applicant_id,
                        t.status = 3,
                        t.updated_at = NOW(),
                        ta.status = 3
                WHERE t.id = #{id}
                    AND t.status IN (1, 2)
                    AND t.chosen_applicant_id IS NULL
                    AND ta.status = 0;
    </update>

    <update id="updateTaskFinish">
        UPDATE task
        SET status = 5, updated_at = NOW()
        WHERE id = #{id}
          AND status = 3;
    </update>

    <!--
    <update id="withdrawById">
        UPDATE task_application a
            JOIN task t ON a.task_id = t.id
            SET a.status = 3
        WHERE a.task_id = #{id}
          AND a.applicant_id = #{currentUserId}
          AND a.status = 0;
    </update>
    -->

    <delete id="withdrawById">
        DELETE FROM task_application
        WHERE task_id = #{id}
          AND applicant_id = #{currentUserId}
          AND status = 0
    </delete>

    <resultMap id="TaskPublishRM" type="org.campus.partworkback.pojo.Task">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="deadline" property="deadline"/>
        <result column="tags" property="tags"/>
        <result column="status" property="status"/>
        <result column="chosen_applicant_id" property="chosenApplicantId"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>
    <select id="getTaskByPublisherId" resultMap="TaskPublishRM">
        SELECT
        id,
        title,
        deadline,
        tags,
        status,
        chosen_applicant_id,
        created_at
        FROM task
        <where>
            publisher_id = #{currentUserId}
        </where>
        ORDER BY created_at DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="getTaskCount">
        SELECT
        COUNT(*)
        FROM task
        <where>
            <!-- 关键词搜索（description模糊查询） -->
            <if test="keyWord != null and keyWord != ''">
                AND description LIKE CONCAT('%', #{keyWord}, '%')
            </if>
            <!-- 状态筛选 -->
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <select id="getTaskCountById">
        SELECT
        COUNT(*)
        FROM task
        <where>
            publisher_id = #{currentUserId}
        </where>
    </select>

    <resultMap id="TaskInProgress" type="org.campus.partworkback.pojo.Task">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="deadline" property="deadline"/>
        <result column="tags" property="tags"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>
    <select id="getTaskInProgress" resultMap="TaskInProgress">
        SELECT
        id,
        title,
        deadline,
        tags,
        status,
        created_at
        FROM task
        <where>
            publisher_id = #{userId} AND status = 3
        </where>
        ORDER BY created_at DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="getAllTaskInProgress">
        SELECT
        COUNT(*)
        FROM task
        <where>
            publisher_id = #{userId} AND status = 3
        </where>
    </select>

    <update id="acceptTask">
        update task set status = 5 where id = #{id}
    </update>

    <select id="getTaskAccepted" resultType="org.campus.partworkback.pojo.Task">
        SELECT
            t.id,
            t.title,
            t.status,
            t.deadline,
            t.publisher_id,
            u.nickname AS publisherName
        FROM task t
                 LEFT JOIN user u ON t.publisher_id = u.id
        WHERE t.chosen_applicant_id = #{userId}
        ORDER BY t.created_at DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="getTaskAcceptedCount">
        SELECT
            COUNT(*)
        FROM task t
                 LEFT JOIN user u ON t.publisher_id = u.id
        WHERE t.chosen_applicant_id = #{userId}
    </select>

    <insert id="applyFinish">
        INSERT INTO task_finish_request (task_id, user_id, request_time, status)
        VALUES (#{id}, #{userId}, NOW(), 0)
            ON DUPLICATE KEY UPDATE request_time=NOW(), status=0
    </insert>

    <select id="hasFinishApply" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM task_finish_request
        WHERE task_id = #{id} AND status = 0
    </select>

    <update id="acceptApplyFinish">
        UPDATE task_finish_request
        SET status = 1
        WHERE task_id = #{id}
          AND status = 0
    </update>

    <select id="getChangeButton">
        SELECT DISTINCT task_id
        FROM task_application
        WHERE applicant_id = #{userId}
          AND status = 0
        ORDER BY task_id
    </select>

    <update id="updateTaskByIdRefuse">
        UPDATE task_application
        SET `status` = 1
        WHERE task_id = #{id}
          AND id &lt;&gt; #{applicationId}
          AND `status` = 0
    </update>
</mapper>